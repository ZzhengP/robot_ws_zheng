warning: Tag 'CLANG_ASSISTED_PARSING' at line 1026 of file '/home/zheng/robot_ws_zheng/build/ros_wrap_safe_motion/Doxyfile' belongs to an option that was not enabled at compile time.
         To avoid this warning please remove this line from your configuration file or upgrade it using "doxygen -u", or recompile doxygen with this feature enabled.
warning: Tag 'CLANG_OPTIONS' at line 1034 of file '/home/zheng/robot_ws_zheng/build/ros_wrap_safe_motion/Doxyfile' belongs to an option that was not enabled at compile time.
         To avoid this warning please remove this line from your configuration file or upgrade it using "doxygen -u", or recompile doxygen with this feature enabled.
warning: Tag 'PERL_PATH' at line 2117 of file '/home/zheng/robot_ws_zheng/build/ros_wrap_safe_motion/Doxyfile' has become obsolete.
         To avoid this warning please remove this line from your configuration file or upgrade it using "doxygen -u"
warning: Tag 'MSCGEN_PATH' at line 2139 of file '/home/zheng/robot_ws_zheng/build/ros_wrap_safe_motion/Doxyfile' has become obsolete.
         To avoid this warning please remove this line from your configuration file or upgrade it using "doxygen -u"
warning: ignoring unknown tag '2020' at line 2435, file /home/zheng/robot_ws_zheng/build/ros_wrap_safe_motion/Doxyfile
warning: ignoring unknown tag 'GitHub' at line 2435, file /home/zheng/robot_ws_zheng/build/ros_wrap_safe_motion/Doxyfile
warning: ignoring unknown tag 'Inc' at line 2435, file /home/zheng/robot_ws_zheng/build/ros_wrap_safe_motion/Doxyfile
warning: ignoring unknown tag 'Terms' at line 2436, file /home/zheng/robot_ws_zheng/build/ros_wrap_safe_motion/Doxyfile
warning: ignoring unknown tag 'Privacy' at line 2437, file /home/zheng/robot_ws_zheng/build/ros_wrap_safe_motion/Doxyfile
warning: ignoring unknown tag 'Security' at line 2438, file /home/zheng/robot_ws_zheng/build/ros_wrap_safe_motion/Doxyfile
warning: ignoring unknown tag 'Status' at line 2439, file /home/zheng/robot_ws_zheng/build/ros_wrap_safe_motion/Doxyfile
warning: ignoring unknown tag 'Help' at line 2440, file /home/zheng/robot_ws_zheng/build/ros_wrap_safe_motion/Doxyfile
warning: ignoring unknown tag 'Contact' at line 2442, file /home/zheng/robot_ws_zheng/build/ros_wrap_safe_motion/Doxyfile
warning: ignoring unknown tag 'GitHub' at line 2442, file /home/zheng/robot_ws_zheng/build/ros_wrap_safe_motion/Doxyfile
warning: ignoring unknown tag 'Pricing' at line 2443, file /home/zheng/robot_ws_zheng/build/ros_wrap_safe_motion/Doxyfile
warning: ignoring unknown tag 'API' at line 2444, file /home/zheng/robot_ws_zheng/build/ros_wrap_safe_motion/Doxyfile
warning: ignoring unknown tag 'Training' at line 2445, file /home/zheng/robot_ws_zheng/build/ros_wrap_safe_motion/Doxyfile
warning: ignoring unknown tag 'Blog' at line 2446, file /home/zheng/robot_ws_zheng/build/ros_wrap_safe_motion/Doxyfile
warning: ignoring unknown tag 'About' at line 2447, file /home/zheng/robot_ws_zheng/build/ros_wrap_safe_motion/Doxyfile
warning: tag INPUT: input source '/home/zheng/robot_ws_zheng/src/ros_wrap_safe_motion/impl/' does not exist
warning: tag INPUT: input source '/home/zheng/robot_ws_zheng/src/ros_wrap_safe_motion/samples/' does not exist
warning: source /home/zheng/robot_ws_zheng/src/ros_wrap_safe_motion/impl is not a readable file or directory... skipping.
warning: source /home/zheng/robot_ws_zheng/src/ros_wrap_safe_motion/samples is not a readable file or directory... skipping.
/home/zheng/robot_ws_zheng/src/ros_wrap_safe_motion/src/RosWraprobotmodel/RosWrapchainjnttojacdotsolver.cpp:35: warning: no matching class member found for 
  int KDL::ChainJntToJacDotSolver::JntToJacDot(const JntArrayVel &q_in, Twist &jac_dot_q_dot, int seg_nr)
Possible candidates:
  'virtual int KDL::ChainJntToJacDotSolver::JntToJacDot(const KDL::JntArrayVel &q_in, KDL::Twist &jac_dot_q_dot, int seg_nr=-1)'
  'virtual int KDL::ChainJntToJacDotSolver::JntToJacDot(const KDL::JntArrayVel &q_in, KDL::Jacobian &jdot, int seg_nr=-1)'

/home/zheng/robot_ws_zheng/src/ros_wrap_safe_motion/src/RosWraprobotmodel/RosWrapchainjnttojacdotsolver.cpp:42: warning: no matching class member found for 
  int KDL::ChainJntToJacDotSolver::JntToJacDot(const JntArrayVel &q_in, Jacobian &jdot, int seg_nr)
Possible candidates:
  'virtual int KDL::ChainJntToJacDotSolver::JntToJacDot(const KDL::JntArrayVel &q_in, KDL::Twist &jac_dot_q_dot, int seg_nr=-1)'
  'virtual int KDL::ChainJntToJacDotSolver::JntToJacDot(const KDL::JntArrayVel &q_in, KDL::Jacobian &jdot, int seg_nr=-1)'

/home/zheng/robot_ws_zheng/src/ros_wrap_safe_motion/include/RosWraprobotmodel/RosWrapchainjnttojacdotsolver.h:107: warning: @copybrief or @copydoc target 'KDL::SolverI::strError()' not found
/home/zheng/robot_ws_zheng/src/ros_wrap_safe_motion/include/RosWraprobotmodel/RosWrapRobotModel.h:108: warning: argument 'kdl_segment' of command @param is not found in the argument list of arm_kinematic::getSegment(unsigned int segment)
/home/zheng/robot_ws_zheng/src/ros_wrap_safe_motion/include/RosWraprobotmodel/RosWrapRobotModel.h:137: warning: argument 'kdl_frame' of command @param is not found in the argument list of arm_kinematic::getSegmentPosition(const std::string &segment_name)
/home/zheng/robot_ws_zheng/src/ros_wrap_safe_motion/include/RosWraprobotmodel/RosWrapRobotModel.h:127: warning: argument 'kdl_frame' of command @param is not found in the argument list of arm_kinematic::getSegmentPosition(unsigned int segment)
/home/zheng/robot_ws_zheng/src/ros_wrap_safe_motion/include/RosWraprobotmodel/RosWrapRobotModel.h:273: warning: argument 'qd_des' of command @param is not found in the argument list of arm_kinematic::setJointVelocities(const Eigen::VectorXd &qd)
/home/zheng/robot_ws_zheng/src/ros_wrap_safe_motion/include/RosWraprobotmodel/RosWrapRobotModel.h:277: warning: The following parameter of arm_kinematic::setJointVelocities(const Eigen::VectorXd &qd) is not documented:
  parameter 'qd'
/home/zheng/robot_ws_zheng/src/ros_wrap_safe_motion/include/RosWraprobotmodel/RosWrapRobotModel.h:396: warning: argument 'Ros' of command @param is not found in the argument list of arm_kinematic::subscriberCallback(const sensor_msgs::JointState &jntState)
/home/zheng/robot_ws_zheng/src/ros_wrap_safe_motion/include/RosWraprobotmodel/RosWrapRobotModel.h:400: warning: The following parameter of arm_kinematic::subscriberCallback(const sensor_msgs::JointState &jntState) is not documented:
  parameter 'jntState'
/home/zheng/robot_ws_zheng/src/ros_wrap_safe_motion/include/RosWrapconstraint/RosWrapGenericCst.h:35: warning: The following parameters of GenericCst::GenericCst(int ndof, int N, double dt, std::string name, Eigen::MatrixXd Px, Eigen::MatrixXd Pu) are not documented:
  parameter 'name'
  parameter 'Px'
  parameter 'Pu'
/home/zheng/robot_ws_zheng/src/ros_wrap_safe_motion/include/RosWrapconstraint/RosWrapGenericCst.h:39: warning: argument 'Px' of command @param is not found in the argument list of GenericCst::setLowerBound(const Eigen::VectorXd &robot_state)
/home/zheng/robot_ws_zheng/src/ros_wrap_safe_motion/include/RosWrapconstraint/RosWrapGenericCst.h:48: warning: argument 'Px' of command @param is not found in the argument list of GenericCst::setUpperBound(const Eigen::VectorXd &robot_state)
/home/zheng/robot_ws_zheng/src/ros_wrap_safe_motion/include/RosWrapconstraint/RosWrapGenericCst.h:61: warning: argument 'Px' of command @param is not found in the argument list of GenericCst::update(const Eigen::VectorXd &robot_state)
/home/zheng/robot_ws_zheng/src/ros_wrap_safe_motion/include/RosWrapconstraint/RosWrapGenericCst.h:61: warning: argument 'Pu' of command @param is not found in the argument list of GenericCst::update(const Eigen::VectorXd &robot_state)
/home/zheng/robot_ws_zheng/src/ros_wrap_safe_motion/include/RosWrapconstraint/RosWrapJointPosCst.h:26: warning: argument 'Px' of command @param is not found in the argument list of JntPosCst::setLowerBound(const Eigen::VectorXd &robot_state) inherited from member setLowerBound at line 39 in file /home/zheng/robot_ws_zheng/src/ros_wrap_safe_motion/include/RosWrapconstraint/RosWrapGenericCst.h
/home/zheng/robot_ws_zheng/src/ros_wrap_safe_motion/include/RosWrapconstraint/RosWrapJointPosCst.h:28: warning: argument 'Px' of command @param is not found in the argument list of JntPosCst::setUpperBound(const Eigen::VectorXd &robot_state) inherited from member setUpperBound at line 48 in file /home/zheng/robot_ws_zheng/src/ros_wrap_safe_motion/include/RosWrapconstraint/RosWrapGenericCst.h
/home/zheng/robot_ws_zheng/src/ros_wrap_safe_motion/include/RosWrapconstraint/RosWrapJointPosCst.h:32: warning: argument 'Px' of command @param is not found in the argument list of JntPosCst::update(const Eigen::VectorXd &robot_state) inherited from member update at line 61 in file /home/zheng/robot_ws_zheng/src/ros_wrap_safe_motion/include/RosWrapconstraint/RosWrapGenericCst.h
/home/zheng/robot_ws_zheng/src/ros_wrap_safe_motion/include/RosWrapconstraint/RosWrapJointPosCst.h:32: warning: argument 'Pu' of command @param is not found in the argument list of JntPosCst::update(const Eigen::VectorXd &robot_state) inherited from member update at line 61 in file /home/zheng/robot_ws_zheng/src/ros_wrap_safe_motion/include/RosWrapconstraint/RosWrapGenericCst.h
/home/zheng/robot_ws_zheng/src/ros_wrap_safe_motion/include/RosWrapconstraint/RosWrapJointVelCst.h:23: warning: argument 'Px' of command @param is not found in the argument list of JntVelCst::setLowerBound(const Eigen::VectorXd &robot_state) inherited from member setLowerBound at line 39 in file /home/zheng/robot_ws_zheng/src/ros_wrap_safe_motion/include/RosWrapconstraint/RosWrapGenericCst.h
/home/zheng/robot_ws_zheng/src/ros_wrap_safe_motion/include/RosWrapconstraint/RosWrapJointVelCst.h:24: warning: argument 'Px' of command @param is not found in the argument list of JntVelCst::setUpperBound(const Eigen::VectorXd &robot_state) inherited from member setUpperBound at line 48 in file /home/zheng/robot_ws_zheng/src/ros_wrap_safe_motion/include/RosWrapconstraint/RosWrapGenericCst.h
/home/zheng/robot_ws_zheng/src/ros_wrap_safe_motion/include/RosWrapconstraint/RosWrapJointVelCst.h:26: warning: argument 'Px' of command @param is not found in the argument list of JntVelCst::update(const Eigen::VectorXd &robot_state) inherited from member update at line 61 in file /home/zheng/robot_ws_zheng/src/ros_wrap_safe_motion/include/RosWrapconstraint/RosWrapGenericCst.h
/home/zheng/robot_ws_zheng/src/ros_wrap_safe_motion/include/RosWrapconstraint/RosWrapJointVelCst.h:26: warning: argument 'Pu' of command @param is not found in the argument list of JntVelCst::update(const Eigen::VectorXd &robot_state) inherited from member update at line 61 in file /home/zheng/robot_ws_zheng/src/ros_wrap_safe_motion/include/RosWrapconstraint/RosWrapGenericCst.h
/home/zheng/robot_ws_zheng/src/ros_wrap_safe_motion/include/RosWraprobotmodel/RosWrapchainjnttojacdotsolver.h:107: warning: @copybrief or @copydoc target 'KDL::SolverI::strError()' not found
/home/zheng/robot_ws_zheng/src/ros_wrap_safe_motion/include/RosWraprobotmodel/RosWrapchainjnttojacdotsolver.h:143: warning: argument 'bs_J_bs' of command @param is not found in the argument list of KDL::ChainJntToJacDotSolver::getPartialDerivative(const Jacobian &J, const unsigned int &joint_idx, const unsigned int &column_idx, const int &representation)
/home/zheng/robot_ws_zheng/src/ros_wrap_safe_motion/include/RosWraprobotmodel/RosWrapchainjnttojacdotsolver.h:152: warning: The following parameter of KDL::ChainJntToJacDotSolver::getPartialDerivative(const Jacobian &J, const unsigned int &joint_idx, const unsigned int &column_idx, const int &representation) is not documented:
  parameter 'J'
/home/zheng/robot_ws_zheng/src/ros_wrap_safe_motion/include/RosWraprobotmodel/RosWrapchainjnttojacdotsolver.h:121: warning: argument 'bs_J_ee' of command @param is not found in the argument list of KDL::ChainJntToJacDotSolver::getPartialDerivativeBodyFixed(const Jacobian &ee_J_ee, const unsigned int &joint_idx, const unsigned int &column_idx)
/home/zheng/robot_ws_zheng/src/ros_wrap_safe_motion/include/RosWraprobotmodel/RosWrapchainjnttojacdotsolver.h:129: warning: The following parameter of KDL::ChainJntToJacDotSolver::getPartialDerivativeBodyFixed(const Jacobian &ee_J_ee, const unsigned int &joint_idx, const unsigned int &column_idx) is not documented:
  parameter 'ee_J_ee'
/home/zheng/robot_ws_zheng/src/ros_wrap_safe_motion/include/RosWraprobotmodel/RosWrapchainjnttojacdotsolver.h:132: warning: argument 'ee_J_ee' of command @param is not found in the argument list of KDL::ChainJntToJacDotSolver::getPartialDerivativeInertial(const Jacobian &bs_J_bs, const unsigned int &joint_idx, const unsigned int &column_idx)
/home/zheng/robot_ws_zheng/src/ros_wrap_safe_motion/include/RosWraprobotmodel/RosWrapchainjnttojacdotsolver.h:140: warning: The following parameter of KDL::ChainJntToJacDotSolver::getPartialDerivativeInertial(const Jacobian &bs_J_bs, const unsigned int &joint_idx, const unsigned int &column_idx) is not documented:
  parameter 'bs_J_bs'
/home/zheng/robot_ws_zheng/src/ros_wrap_safe_motion/include/RosWraprobotmodel/RosWrapchainjnttojacdotsolver.h:107: warning: @copybrief or @copydoc target 'KDL::SolverI::strError()' not found
/home/zheng/robot_ws_zheng/src/ros_wrap_safe_motion/include/RosWraprobotmodel/RosWrapchainjnttojacdotsolver.h:107: warning: @copydetails or @copydoc target 'KDL::SolverI::strError()' not found
CMakeFiles/openPoseTest.dir/openPoseTest.cpp.o : Dans la fonction « __static_initialization_and_destruction_0(int, int) » :
openPoseTest.cpp:(.text+0x76) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<int>(char const*, char const*, char const*, int*, int*) »
openPoseTest.cpp:(.text+0xa5) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<bool>(char const*, char const*, char const*, bool*, bool*) »
openPoseTest.cpp:(.text+0xd4) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<int>(char const*, char const*, char const*, int*, int*) »
openPoseTest.cpp:(.text+0x103) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<int>(char const*, char const*, char const*, int*, int*) »
openPoseTest.cpp:(.text+0x17e) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) »
openPoseTest.cpp:(.text+0x23b) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) »
openPoseTest.cpp:(.text+0x2f8) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) »
openPoseTest.cpp:(.text+0x369) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<bool>(char const*, char const*, char const*, bool*, bool*) »
openPoseTest.cpp:(.text+0x398) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<int>(char const*, char const*, char const*, int*, int*) »
openPoseTest.cpp:(.text+0x413) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) »
openPoseTest.cpp:(.text+0x484) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<unsigned long>(char const*, char const*, char const*, unsigned long*, unsigned long*) »
openPoseTest.cpp:(.text+0x4b3) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<unsigned long>(char const*, char const*, char const*, unsigned long*, unsigned long*) »
openPoseTest.cpp:(.text+0x4e2) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<unsigned long>(char const*, char const*, char const*, unsigned long*, unsigned long*) »
openPoseTest.cpp:(.text+0x511) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<bool>(char const*, char const*, char const*, bool*, bool*) »
openPoseTest.cpp:(.text+0x540) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<int>(char const*, char const*, char const*, int*, int*) »
openPoseTest.cpp:(.text+0x56f) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<bool>(char const*, char const*, char const*, bool*, bool*) »
openPoseTest.cpp:(.text+0x59e) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<bool>(char const*, char const*, char const*, bool*, bool*) »
openPoseTest.cpp:(.text+0x619) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) »
openPoseTest.cpp:(.text+0x68a) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<bool>(char const*, char const*, char const*, bool*, bool*) »
openPoseTest.cpp:(.text+0x705) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) »
openPoseTest.cpp:(.text+0x7c2) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) »
openPoseTest.cpp:(.text+0x87f) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) »
openPoseTest.cpp:(.text+0x93c) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) »
openPoseTest.cpp:(.text+0x9ad) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<int>(char const*, char const*, char const*, int*, int*) »
openPoseTest.cpp:(.text+0x9dc) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<int>(char const*, char const*, char const*, int*, int*) »
openPoseTest.cpp:(.text+0xa0b) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<int>(char const*, char const*, char const*, int*, int*) »
openPoseTest.cpp:(.text+0xa3a) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<int>(char const*, char const*, char const*, int*, int*) »
openPoseTest.cpp:(.text+0xa69) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<bool>(char const*, char const*, char const*, bool*, bool*) »
openPoseTest.cpp:(.text+0xa98) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<double>(char const*, char const*, char const*, double*, double*) »
openPoseTest.cpp:(.text+0xac7) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<int>(char const*, char const*, char const*, int*, int*) »
openPoseTest.cpp:(.text+0xb42) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) »
openPoseTest.cpp:(.text+0xbff) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) »
openPoseTest.cpp:(.text+0xc70) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<int>(char const*, char const*, char const*, int*, int*) »
openPoseTest.cpp:(.text+0xc9f) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<double>(char const*, char const*, char const*, double*, double*) »
openPoseTest.cpp:(.text+0xcce) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<bool>(char const*, char const*, char const*, bool*, bool*) »
openPoseTest.cpp:(.text+0xcfd) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<bool>(char const*, char const*, char const*, bool*, bool*) »
openPoseTest.cpp:(.text+0xd2c) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<bool>(char const*, char const*, char const*, bool*, bool*) »
openPoseTest.cpp:(.text+0xd5b) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<int>(char const*, char const*, char const*, int*, int*) »
openPoseTest.cpp:(.text+0xd8a) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<bool>(char const*, char const*, char const*, bool*, bool*) »
openPoseTest.cpp:(.text+0xdb9) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<double>(char const*, char const*, char const*, double*, double*) »
openPoseTest.cpp:(.text+0xde8) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<bool>(char const*, char const*, char const*, bool*, bool*) »
openPoseTest.cpp:(.text+0xe17) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<int>(char const*, char const*, char const*, int*, int*) »
openPoseTest.cpp:(.text+0xe92) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) »
openPoseTest.cpp:(.text+0xf03) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<bool>(char const*, char const*, char const*, bool*, bool*) »
openPoseTest.cpp:(.text+0xf32) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<int>(char const*, char const*, char const*, int*, int*) »
openPoseTest.cpp:(.text+0xfad) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) »
openPoseTest.cpp:(.text+0x101e) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<int>(char const*, char const*, char const*, int*, int*) »
openPoseTest.cpp:(.text+0x104d) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<double>(char const*, char const*, char const*, double*, double*) »
openPoseTest.cpp:(.text+0x107c) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<bool>(char const*, char const*, char const*, bool*, bool*) »
openPoseTest.cpp:(.text+0x10ab) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<int>(char const*, char const*, char const*, int*, int*) »
openPoseTest.cpp:(.text+0x10da) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<int>(char const*, char const*, char const*, int*, int*) »
openPoseTest.cpp:(.text+0x1109) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<bool>(char const*, char const*, char const*, bool*, bool*) »
openPoseTest.cpp:(.text+0x1138) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<int>(char const*, char const*, char const*, int*, int*) »
openPoseTest.cpp:(.text+0x1167) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<int>(char const*, char const*, char const*, int*, int*) »
openPoseTest.cpp:(.text+0x1196) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<int>(char const*, char const*, char const*, int*, int*) »
openPoseTest.cpp:(.text+0x11c5) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<bool>(char const*, char const*, char const*, bool*, bool*) »
openPoseTest.cpp:(.text+0x11f4) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<double>(char const*, char const*, char const*, double*, double*) »
openPoseTest.cpp:(.text+0x1223) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<int>(char const*, char const*, char const*, int*, int*) »
openPoseTest.cpp:(.text+0x1252) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<double>(char const*, char const*, char const*, double*, double*) »
openPoseTest.cpp:(.text+0x1281) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<double>(char const*, char const*, char const*, double*, double*) »
openPoseTest.cpp:(.text+0x12b0) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<double>(char const*, char const*, char const*, double*, double*) »
openPoseTest.cpp:(.text+0x12df) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<int>(char const*, char const*, char const*, int*, int*) »
openPoseTest.cpp:(.text+0x130e) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<double>(char const*, char const*, char const*, double*, double*) »
openPoseTest.cpp:(.text+0x133d) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<double>(char const*, char const*, char const*, double*, double*) »
openPoseTest.cpp:(.text+0x136c) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<double>(char const*, char const*, char const*, double*, double*) »
openPoseTest.cpp:(.text+0x139b) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<int>(char const*, char const*, char const*, int*, int*) »
openPoseTest.cpp:(.text+0x13ca) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<double>(char const*, char const*, char const*, double*, double*) »
openPoseTest.cpp:(.text+0x13f9) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<double>(char const*, char const*, char const*, double*, double*) »
openPoseTest.cpp:(.text+0x1428) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<bool>(char const*, char const*, char const*, bool*, bool*) »
openPoseTest.cpp:(.text+0x1457) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<bool>(char const*, char const*, char const*, bool*, bool*) »
openPoseTest.cpp:(.text+0x1486) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<int>(char const*, char const*, char const*, int*, int*) »
openPoseTest.cpp:(.text+0x14b5) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<double>(char const*, char const*, char const*, double*, double*) »
openPoseTest.cpp:(.text+0x1530) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) »
openPoseTest.cpp:(.text+0x15ed) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) »
openPoseTest.cpp:(.text+0x16aa) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) »
openPoseTest.cpp:(.text+0x171b) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<double>(char const*, char const*, char const*, double*, double*) »
openPoseTest.cpp:(.text+0x174a) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<bool>(char const*, char const*, char const*, bool*, bool*) »
openPoseTest.cpp:(.text+0x17c5) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) »
openPoseTest.cpp:(.text+0x1882) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) »
openPoseTest.cpp:(.text+0x193f) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) »
openPoseTest.cpp:(.text+0x19fc) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) »
openPoseTest.cpp:(.text+0x1a6d) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<int>(char const*, char const*, char const*, int*, int*) »
openPoseTest.cpp:(.text+0x1a9c) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<int>(char const*, char const*, char const*, int*, int*) »
openPoseTest.cpp:(.text+0x1b17) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) »
openPoseTest.cpp:(.text+0x1bd4) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) »
openPoseTest.cpp:(.text+0x1c91) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) »
openPoseTest.cpp:(.text+0x1d4e) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) »
openPoseTest.cpp:(.text+0x1e0b) : référence indéfinie vers « google::FlagRegisterer::FlagRegisterer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) »
CMakeFiles/openPoseTest.dir/openPoseTest.cpp.o:openPoseTest.cpp:(.text+0x1ec8) : encore plus de références indéfinies suivent vers « google::FlagRegisterer::FlagRegisterer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) »
collect2: error: ld returned 1 exit status
make[2]: *** [/home/zheng/robot_ws_zheng/devel/.private/ros_wrap_safe_motion/lib/ros_wrap_safe_motion/openPoseTest] Error 1
make[1]: *** [examples/CMakeFiles/openPoseTest.dir/all] Error 2
make[1]: *** Attente des tâches non terminées....
make: *** [all] Error 2
